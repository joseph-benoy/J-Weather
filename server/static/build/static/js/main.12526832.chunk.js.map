{"version":3,"sources":["Components/MainButton/MainButton.tsx","Pages/Home/Home.tsx","Theme/Theme.ts","Components/Header/Header.tsx","Pages/about/About.tsx","Components/dailog/Dialog.tsx","Pages/Contact/Contact.tsx","Redux/Weather/WeatherSlice.ts","Pages/Weather/Weather.tsx","Redux/Store.ts","Jweather.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","button","color","margin","spacing","marginTop","width","breakpoints","down","buttonGrid","justifyContent","up","MainButton","props","classes","Grid","item","container","className","Button","type","onClick","click","startIcon","icon","size","variant","Typography","text","React","memo","root","padding","coverImage","height","display","subHeading","fontSize","fontFamily","textAlign","heading","palette","primary","main","divide","background","Home","history","useHistory","navigateTo","useRef","push","current","routeToWeather","useCallback","xs","lg","alt","src","Divider","createTheme","secondary","lightGreen","lightYellow","typography","join","drawerWidth","marginBottom","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","content","flexGrow","contentShift","title","rlinks","Header","useTheme","useState","open","setOpen","routeHandler","event","currentTarget","name","routeHandlerL","route","CssBaseline","AppBar","position","clsx","elevation","Toolbar","IconButton","edge","style","noWrap","Drawer","anchor","paper","direction","List","ListItem","ListItemIcon","ListItemText","textGrid","coverImageMob","About","routeToContact","Alert","Dialog","useEffect","handleClose","reason","undefined","cb","Snackbar","autoHideDuration","onClose","severity","message","formLabel","formBase","formInput","formGrid","validationObj","required","value","maxLength","minLength","pattern","Contact","useForm","handleSubmit","register","errors","formState","error","setError","onSubmit","data","a","axios","post","fullName","email","resetError","noValidate","autoComplete","FormControl","fullWidth","InputLabel","htmlFor","OutlinedInput","startAdornment","InputAdornment","id","label","placeholder","FormHelperText","TextField","multiline","rows","helperText","weatherSlice","createSlice","initialState","city","reducers","setQueryCity","state","action","payload","setWeatherData","actions","paddingTop","opacity","dataContainer","Weather","dispatch","useDispatch","weatherData","useSelector","weather","get","response","console","log","slice","toUpperCase","Paper","temp","humidity","pressure","wind","store","configureStore","reducer","weatherReducer","Jweather","ThemeProvider","exact","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12526832.chunk.js","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme:Theme)=>createStyles({\n       button:{\n              color:\"white\",\n              margin: theme.spacing(1),\n              marginTop:theme.spacing(3),\n              width:\"15vw\",\n              [theme.breakpoints.down('md')]:{\n                     width:\"50vw\"\n              }\n       },\n       buttonGrid:{\n              justifyContent:\"center\",\n              [theme.breakpoints.up('md')]:{\n                     justifyContent:\"flex-start\"\n              }\n       },\n}));\n\ninterface Props{\n       click?:()=>void,\n       icon:JSX.Element,\n       text:string,\n       type?:\"button\" | \"submit\" | \"reset\" | undefined\n}\n\nconst MainButton:(props: Props) => JSX.Element= (props:Props)=>{\n       const classes = useStyles();\n       return(\n              <>\n              <Grid item container className={classes.buttonGrid}>\n                     <Button type={props.type} onClick={props.click} startIcon={props.icon} size=\"large\" className={classes.button} variant=\"contained\" color=\"secondary\">\n                            <Typography>{props.text}</Typography>\n                     </Button>\n              </Grid>\n              </>\n       );\n}\n\nexport default React.memo(MainButton);","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport FilterDramaOutlinedIcon from '@material-ui/icons/FilterDramaOutlined';\nimport { Divider } from '@material-ui/core';\nimport { useHistory } from 'react-router';\nimport MainButton from '../../Components/MainButton/MainButton';\n\nconst useStyles = makeStyles((theme:Theme)=>createStyles({\n       root:{\n              padding:\"5vh\"\n       },\n       coverImage:{\n              width:\"100%\",\n              height:\"100%\",\n              [theme.breakpoints.down('md')]:{\n                     display:\"none\"\n              }\n       },\n       subHeading:{\n              fontSize:\"1.5em\",\n              fontFamily:\"sans-serif\",\n              color:\"rgba(0,0,0,0.7)\",\n              [theme.breakpoints.down('md')]:{\n                     textAlign:\"justify\",\n              }\n\n       },\n       heading:{\n              fontSize:\"6em\",\n              color:theme.palette.primary.main,\n              [theme.breakpoints.down('md')]:{\n                     textAlign:\"center\",\n                     fontSize:\"4em\",\n                     marginTop:theme.spacing(2)\n              }\n       },\n       button:{\n              color:\"white\",\n              margin: theme.spacing(1),\n              marginTop:theme.spacing(3),\n              width:\"15vw\",\n              [theme.breakpoints.down('md')]:{\n                     width:\"50vw\"\n              }\n       },\n       buttonGrid:{\n              justifyContent:\"center\",\n              [theme.breakpoints.up('md')]:{\n                     justifyContent:\"flex-start\"\n              }\n       },\n       divide:{\n              background:theme.palette.primary.main,\n              height:\"0.7vh\",\n              marginTop:theme.spacing(5),\n       }\n}));\n\nconst Home:React.FC = ()=>{\n       const classes = useStyles();\n       const history = useHistory();\n       const navigateTo = React.useRef(history.push).current;\n       const routeToWeather = React.useCallback(()=>{\n              navigateTo(\"weather\");\n       },[navigateTo]);\n       return (\n              <Grid container className={classes.root}>\n                     <Grid item xs={12} lg={6}>\n                            <img alt=\"home-page-cover\" className={classes.coverImage} src=\"./images/home_cover.svg\"/>\n                     </Grid>\n                     <Grid item lg={5}>\n                            <Typography variant=\"h1\" className={classes.heading}>\n                                   One-Touch weather\n                            </Typography>\n                            <Typography variant=\"body1\" className={classes.subHeading}> \n                                   Get detailed weather updates of 2,00,000+ cities in few clicks. Plan your day with our weather reports  and prepare for anything\n                            </Typography>\n                            <MainButton text=\"checkout\" icon={<FilterDramaOutlinedIcon/>} click={routeToWeather}/>\n                            <Divider className={classes.divide}/>\n                     </Grid>\n              </Grid>\n       );\n}\n\nexport default React.memo(Home);","import { createTheme} from '@material-ui/core/styles';\nimport \"@fontsource/hammersmith-one\"\n\ndeclare module \"@material-ui/core/styles/createPalette\" {\n       interface Palette {\n              lightGreen: Palette['primary'];\n       }\n       interface PaletteOptions {\n              lightGreen: PaletteOptions['primary'];\n       }\n}\ndeclare module \"@material-ui/core/styles/createPalette\" {\n       interface Palette {\n              lightYellow: Palette['primary'];\n       }\n       interface PaletteOptions {\n              lightYellow: PaletteOptions['primary'];\n       }\n}\nconst theme = createTheme({\n       palette:{\n              primary:{\n                     main:'#206A5D'\n              },\n              secondary:{\n                     main:'#F58634'\n              },\n              lightGreen:{\n                     main:'#81B214'\n              },\n              lightYellow:{\n                     main:'#F58634'\n              }\n       },\n       typography:{\n              fontFamily: [\n                     'Hammersmith One',\n                     'sans-serif',\n                     ].join(','),\n       },\n});\n\nexport default theme;","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FilterDramaOutlinedIcon from '@material-ui/icons/FilterDramaOutlined';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport ContactSupportOutlinedIcon from '@material-ui/icons/ContactSupportOutlined';\nimport LocalPhoneOutlinedIcon from '@material-ui/icons/LocalPhoneOutlined';\nimport { useHistory } from 'react-router';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      marginBottom:\"10vh\",\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(5),\n      color:theme.palette.primary.main,\n      display:\"none\",\n      [theme.breakpoints.down('md')]:{\n        display:\"block\"\n      }\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n    title:{\n      color:theme.palette.primary.main,\n      flexGrow:2,\n    },\n    rlinks:{\n      marginRight: theme.spacing(2),\n      color:theme.palette.primary.main,\n      display:\"block\",\n      [theme.breakpoints.down('md')]:{\n        display:\"none\"\n      }\n    }\n  }),\n);\n\nconst Header = ()=> {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const history = useHistory();\n  const navigateTo = React.useRef(history.push).current;\n  const routeHandler = React.useCallback<(event:React.MouseEvent) => void>((event:React.MouseEvent)=>{\n    navigateTo((event.currentTarget as HTMLInputElement).name);\n  },[navigateTo]);\n  const routeHandlerL = React.useCallback<(route:string) => void>((route:string)=>{\n    navigateTo((route));\n  },[navigateTo]);\n  return (\n    <header className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n        elevation={0}\n        color=\"transparent\"\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n            style={{color:theme.palette.primary.main}}\n          >\n            <MenuIcon fontSize=\"large\"/>\n          </IconButton>\n          <Typography variant=\"h4\" noWrap className={classes.title}>\n            J-Weather\n          </Typography>\n          <IconButton edge=\"end\" name=\"home\" onClick={routeHandler} className={classes.rlinks} color=\"inherit\" aria-label=\"menu\">\n              <HomeOutlinedIcon />\n          </IconButton>\n          <IconButton edge=\"end\" name=\"weather\" onClick={routeHandler} className={classes.rlinks} color=\"inherit\" aria-label=\"menu\">\n              <FilterDramaOutlinedIcon />\n          </IconButton>\n          <IconButton edge=\"end\" name=\"about\" onClick={routeHandler} className={classes.rlinks} color=\"inherit\" aria-label=\"menu\">\n              <ContactSupportOutlinedIcon />\n          </IconButton>\n          <IconButton edge=\"end\" name=\"contact\" onClick={routeHandler} className={classes.rlinks} color=\"inherit\" aria-label=\"menu\">\n              <LocalPhoneOutlinedIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n            <ListItem button onClick={()=>{routeHandlerL('home')}}>\n              <ListItemIcon><HomeOutlinedIcon/></ListItemIcon>\n              <ListItemText primary=\"Home\" />\n            </ListItem>\n            <ListItem button onClick={()=>{routeHandlerL('weather')}}>\n              <ListItemIcon><FilterDramaOutlinedIcon/></ListItemIcon>\n              <ListItemText primary=\"Weather\" />\n            </ListItem>\n            <ListItem button onClick={()=>{routeHandlerL('about')}}>\n              <ListItemIcon><ContactSupportOutlinedIcon/></ListItemIcon>\n              <ListItemText primary=\"About\" />\n            </ListItem>\n            <ListItem button onClick={()=>{routeHandlerL('contact')}}>\n              <ListItemIcon><LocalPhoneOutlinedIcon/></ListItemIcon>\n              <ListItemText primary=\"Contact\" />\n            </ListItem>\n        </List>\n      </Drawer>\n    </header>\n  );\n}\n\n\nexport default React.memo(Header);","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport MainButton from '../../Components/MainButton/MainButton';\nimport { useHistory } from 'react-router';\nimport LocalPhoneOutlinedIcon from '@material-ui/icons/LocalPhoneOutlined';\n\nconst useStyles = makeStyles((theme:Theme)=>createStyles({\n       root:{\n              padding:\"5vw\",\n       },\n       coverImage:{\n              width:\"100%\",\n              height:\"100%\",\n              marginBottom:\"5vh\",\n       },\n       title:{\n              marginTop:\"5vh\",\n              [theme.breakpoints.down('md')]:{\n                     textAlign:\"center\"\n              }              \n       },\n       subHeading:{\n              color:\"rgba(0,0,0,0.7)\",\n              fontFamily:\"sans-serif\",\n              textAlign:\"justify\"\n       },\n       textGrid:{\n              marginLeft:\"5vw\",\n              [theme.breakpoints.down('md')]:{\n                     marginLeft:\"0vw\",\n              }\n       },\n       buttonGrid:{\n              justifyContent:\"center\",\n              [theme.breakpoints.up('md')]:{\n                     justifyContent:\"flex-start\"\n              }\n       },\n       button:{\n              color:\"white\",\n              margin: theme.spacing(1),\n              marginTop:theme.spacing(3),\n              width:\"15vw\",\n              [theme.breakpoints.down('md')]:{\n                     width:\"50vw\"\n              }\n       },\n       coverImageMob:{\n              width:\"100%\",\n              height:\"100%\",\n              display:\"none\",\n              marginTop:\"-10vh\",\n              [theme.breakpoints.down('md')]:{\n                     display:\"block\"\n              }\n       },\n}))\n\nconst About:React.FC = ()=>{\n       const classes = useStyles();\n       const history = useHistory();\n       const navigateTo = React.useRef(history.push).current;\n       const routeToContact = React.useCallback(()=>{\n              navigateTo(\"contact\");\n       },[navigateTo])\n       return (\n              <Grid container className={classes.root}>\n                     <Grid item lg={6}>\n                            <img className={classes.coverImage} src=\"./images/about_cover.svg\" alt=\"about-page-cover\"/>\n                     </Grid>\n                     <Grid item lg={5} className={classes.textGrid}>\n                            <Typography variant=\"h4\" className={classes.title}>\n                                   About us\n                            </Typography>\n                            <Typography variant=\"h6\" className={classes.subHeading}>\n                                   J-Weather built using open weather api. We help you to get detailed weather reports of about 2,00,000+ cities up-to-date.\n                            </Typography>\n                            <MainButton text=\"say hello!\" icon={<LocalPhoneOutlinedIcon/>} click={routeToContact}/>\n                     </Grid>\n              </Grid>\n       );\n}\n\nexport default React.memo(About);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\ninterface Props{\n       open:boolean|  undefined ,\n       message:string,\n       type:\"error\" | \"success\" | \"info\" | \"warning\" | undefined,\n       cb?:()=>void\n}\n\nfunction Dialog(props:Props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState<boolean | undefined>(false);\n       React.useEffect(()=>{\n              setOpen(props.open)\n       },[props.open]);\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n    if(props?.cb!==undefined){\n      props?.cb();\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={props.type}>\n          {props.message}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n\nexport default React.memo(Dialog);\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport MainButton from '../../Components/MainButton/MainButton';\nimport { useForm,SubmitHandler } from 'react-hook-form';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport EmailOutlinedIcon from '@material-ui/icons/EmailOutlined';\nimport PermIdentityOutlinedIcon from '@material-ui/icons/PermIdentityOutlined';\nimport TextField from '@material-ui/core/TextField';\nimport SendOutlinedIcon from '@material-ui/icons/SendOutlined';\nimport { FormHelperText } from '@material-ui/core';\nimport axios from 'axios';\nimport Dialog from '../../Components/dailog/Dialog';\n\nconst useStyles = makeStyles((theme:Theme)=>createStyles({\n       root:{\n              padding:\"5vw\",\n       },\n       coverImage:{\n              width:\"85%\",\n              height:\"85%\",\n              marginBottom:\"5vh\",\n              [theme.breakpoints.down('md')]:{\n                     display:\"none\"\n              }  \n       },\n       title:{\n              [theme.breakpoints.down('md')]:{\n                     textAlign:\"center\"\n              }              \n       },\n       formLabel:{\n              fontFamily:\"sans-serif\",\n       },\n       formBase: {\n            },\n            formInput:{\n            },\n            formGrid:{\n              [theme.breakpoints.down('md')]:{\n                    width:\"101.5vw\"\n              }\n            },\n}))\ninterface contactFormInputs {\n       fullName: string\n       email: string\n       message:string\n     }\nconst validationObj = {\n       fullName:{required:{value:true,message:\"Please enter your name\"},maxLength:{value:25,message:\"Your name is too long\"},minLength:{value:3,message:\"Your name is too short\"}},\n       email:{required:{value:true,message:\"Let us know your email\"},maxLength:{value:255,message:\"Your email is too long\"},pattern:{value:/^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i,message:\"Please enter a valid email\"}},\n       message:{required:{value:true,message:\"Please don't leave empty message\"},minLength:{value:5,message:\"Message is too short\"}}\n};\ninterface DialogType{\n       open:boolean,\n       message:string,\n       type:\"error\" | \"success\" | \"info\" | \"warning\" | undefined,\n}\nconst Contact:React.FC = ()=>{\n       const classes = useStyles();\n       const {handleSubmit,register,formState:{errors}} = useForm<contactFormInputs>();\n       const [error,setError] = React.useState<DialogType | null>({type:\"success\",message:'',open:false});\n       const onSubmit:SubmitHandler<contactFormInputs> = async (data)=>{\n              try{\n                     await axios.post(\"/message/save\",{\n                            fullName:data.fullName,\n                            email:data.email,\n                            message:data.message\n                     })\n                     setError({\n                            open:true,\n                            message:\"Message is sent!\",\n                            type:\"success\"\n                     });\n              }\n              catch(error){\n                     setError({\n                            open:true,\n                            message:\"Something went wrong!\",\n                            type:\"error\"\n                     });\n              }\n       }; \n       const resetError = React.useCallback(()=>{\n              setError({\n                     open:false,\n                     message:'',\n                     type:undefined\n              })\n       },[]);\n       return (\n              <Grid container className={classes.root}>\n                     <Grid item lg={7}>\n                            <img src=\"./images/contact_us.svg\" alt=\"contact-us\" className={classes.coverImage}/>\n                     </Grid>\n                     <Grid item container lg={5}>\n                            <form onSubmit={handleSubmit(onSubmit)} className={classes.formBase} noValidate autoComplete=\"off\"> \n                                   <Grid container item xs={12} className={classes.formGrid}  spacing={3}>\n                                          <Grid item xs={12}>\n                                                 <Typography className={classes.title} variant=\"h4\">Contact Us</Typography>\n                                          </Grid>\n                                          <Grid item xs={12}>\n                                                 <FormControl variant=\"outlined\" fullWidth={true}>\n                                                        <InputLabel  htmlFor=\"fullName\">Name</InputLabel>\n                                                        <OutlinedInput \n                                                               error={errors.fullName!==undefined}\n                                                               {...register('fullName',validationObj.fullName)}\n                                                               type=\"email\"\n                                                               fullWidth={true}\n                                                               startAdornment={\n                                                                      <InputAdornment position=\"start\">\n                                                                             <PermIdentityOutlinedIcon/>\n                                                                      </InputAdornment>\n                                                               }\n                                                               id=\"fullName\"\n                                                               label=\"Name\"\n                                                               placeholder=\"John Doe\"\n                                                        />\n                                                          <FormHelperText id=\"full-helper-text\">{errors.fullName?.message}</FormHelperText>\n                                                 </FormControl>\n                                          </Grid>\n                                          <Grid item xs={12}>\n                                                 <FormControl variant=\"outlined\" fullWidth={true}>\n                                                        <InputLabel className={classes.formLabel} htmlFor=\"email\">Email</InputLabel>\n                                                        <OutlinedInput \n                                                        {...register('email',validationObj.email)}\n                                                        startAdornment={\n                                                               <InputAdornment position=\"start\">\n                                                                      <EmailOutlinedIcon />\n                                                               </InputAdornment>\n                                                        }\n                                                        error={errors.email!==undefined}\n                                                         id=\"email\" placeholder=\"johndoe@example.com\" label=\"email\" />\n                                                         <FormHelperText id=\"email-helper-text\">{errors.email?.message}</FormHelperText>\n                                                 </FormControl>\n                                          </Grid>\n                                          <Grid item xs={12}>\n                                                 <TextField\n                                                        {...register('message',validationObj.message)}\n                                                        id=\"message\"\n                                                        label=\"message\"\n                                                        multiline\n                                                        rows={4}\n                                                        variant=\"outlined\"\n                                                        fullWidth={true}\n                                                        error={(errors.message!==undefined)}\n                                                        helperText={errors.message?.message}\n                                                 />\n                                          </Grid>\n                                          <Grid item xs={12}  style={{marginTop:\"-5vh\"}}>\n                                                 <MainButton type=\"submit\" text=\"message\" icon={<SendOutlinedIcon/>}/>\n                                          </Grid>\n                                   </Grid>\n                            </form>\n                     </Grid>\n                     <Grid item xs={12}>\n                            <Dialog cb={resetError} message={error?.message as string} type={error?.type} open={error?.open}/>\n                     </Grid>\n              </Grid>\n       );\n}\n\nexport default React.memo(Contact);","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport interface weatherState{\n       city:string | null,\n       data?:object | undefined | null\n}\n\nconst initialState:weatherState = {\n       city:\"\",\n       data:null\n}\nexport const weatherSlice = createSlice({\n       name:'weather',\n       initialState,\n       reducers:{\n              setQueryCity:(state,action:PayloadAction<string>)=>{\n                     state.city = action.payload;\n              },\n              setWeatherData:(state,action:PayloadAction<weatherState | null>)=>{\n                     state.data = action.payload;\n              }\n       }\n});\n\nexport const {setQueryCity,setWeatherData} = weatherSlice.actions;\n\nexport default weatherSlice.reducer;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { TextField, Typography } from '@material-ui/core';\nimport MainButton from '../../Components/MainButton/MainButton';\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\nimport { useSelector,useDispatch } from 'react-redux';\nimport {RootState} from '../../Redux/Store';\nimport { useForm,SubmitHandler } from 'react-hook-form';\nimport { setQueryCity, setWeatherData } from '../../Redux/Weather/WeatherSlice';\nimport axios from 'axios';\nimport WhatshotOutlinedIcon from '@material-ui/icons/WhatshotOutlined';\nimport { Paper } from '@material-ui/core';\nimport AcUnitOutlinedIcon from '@material-ui/icons/AcUnitOutlined';\nimport FilterTiltShiftOutlinedIcon from '@material-ui/icons/FilterTiltShiftOutlined';\nimport CloudOutlinedIcon from '@material-ui/icons/CloudOutlined';\nimport HdrWeakOutlinedIcon from '@material-ui/icons/HdrWeakOutlined';\nimport Dialog from '../../Components/dailog/Dialog';\n\nconst useStyles = makeStyles((theme:Theme)=>createStyles({\n       root:{\n              padding:\"3vw\",\n              paddingTop:\"2vw\",\n              [theme.breakpoints.down('md')]:{\n                     padding:\"3vh\",\n              }              \n       },\n       coverImage:{\n              width:\"50%\",\n              height:\"50%\",\n              opacity:\"90%\",\n              marginTop:\"7vh\",\n              [theme.breakpoints.down('md')]:{\n                     width:\"75%\",\n                     height:\"75%\",\n              }\n       },\n       buttonGrid:{\n              display:\"flex\",\n              marginTop:theme.spacing(-2),\n              [theme.breakpoints.down('md')]:{\n                     justifyContent:\"flex-start\",\n                     marginTop:theme.spacing(-1),\n              }\n       },\n       title:{\n              textAlign:\"center\"\n       },\n       dataContainer:{\n              textAlign:\"center\"\n       }\n}));\n\ninterface weatherForm{\n       city:string\n}\nconst validationObj= {\n       required:{\n              value:true,\n              message:\"Please enter your city\"\n       },\n       minLength:{\n              value:2,\n              message:\"City name is too short\"\n       }\n};\ninterface weather{\n       temp:number,\n       humidity:number,\n       wind:number,\n       weather:string,\n       pressure:number\n}\nconst Weather:React.FC = ()=>{\n       const classes = useStyles();\n       const dispatch = useDispatch();\n       const [error,setError] = React.useState(false);\n       const queryCity = useSelector((state:RootState)=>state.weather.city);\n       const weatherData:any = useSelector((state:RootState)=>state.weather.data);\n       const {handleSubmit,register,formState:{errors}} = useForm<weatherForm>();\n       const onSubmit:SubmitHandler<weatherForm> = async (data:weatherForm)=>{\n              dispatch(setQueryCity(data.city));\n              try{\n                     let response = await axios.get(`/weather?city=${data.city}`);\n                     dispatch(setWeatherData(response.data));\n              }\n              catch(error){\n                     console.log(error.response.data);\n                     dispatch(setWeatherData(null));\n                     setError(true);\n              }\n       }; \n       return(\n              <Grid container className={classes.root}>\n                     <Grid item xs={12}>\n                            <Typography variant=\"h4\" className={classes.title}>\n                                   Let's know about your city\n                            </Typography>\n                     </Grid>\n                     <Grid item xs={12}>\n                            <form onSubmit={handleSubmit(onSubmit)}>\n                                   <Grid container item xs={12} spacing={2}>\n                                   <Grid item xs={12} lg={10}>\n                                          <TextField error={errors.city!==undefined} helperText={errors.city?.message} {...register('city',validationObj)} fullWidth  variant=\"outlined\" type=\"text\" placeholder=\"eg. Mumbai\" name=\"city\"/>\n                                   </Grid>\n                                   <Grid item xs={12} container lg={2} className={classes.buttonGrid} alignItems=\"stretch\">\n                                          <MainButton type=\"submit\" text=\"search\" icon={<SearchOutlinedIcon/>}/>\n                                   </Grid>\n                                   </Grid>\n                            </form>\n                     </Grid>\n                     {\n                            (weatherData===null)?(\n                                   <>\n                                          <Grid item xs={12} container justifyContent=\"center\">\n                                                 <img src=\"./images/city.svg\" alt=\"city\" className={classes.coverImage}/>\n                                          </Grid>\n                                          <Grid item xs={12}>\n                                                 <Dialog open={error} message=\"City not found\" type=\"error\"/>\n                                          </Grid>\n                                   </>\n                            ):(\n                                   <Grid item xs={12} container spacing={2} style={{margin:0}}>\n                                          <Grid item xs={12} className={classes.dataContainer}>\n                                                 <Typography variant=\"h4\">{`${weatherData?.weather.slice(0,1).toUpperCase()}${weatherData?.weather.slice(1)}`}</Typography>\n                                          </Grid>\n                                          <Grid item xs={12} lg={6} className={classes.dataContainer}>\n                                                 <Paper elevation={2}>\n                                                        <Typography variant=\"h4\">{weatherData?.temp}&#8451;</Typography>\n                                                        <WhatshotOutlinedIcon/>\n                                                        <Typography variant=\"body1\">Temperature</Typography>\n                                                 </Paper>\n                                          </Grid>\n                                          <Grid item xs={12} lg={6} className={classes.dataContainer}>\n                                                 <Paper elevation={2}>\n                                                        <Typography variant=\"h4\">{weatherData?.humidity}%</Typography>\n                                                        <AcUnitOutlinedIcon/>\n                                                        <Typography variant=\"body1\">Humidity</Typography>\n                                                 </Paper>\n                                          </Grid>\n                                          <Grid item xs={12} lg={6} className={classes.dataContainer}>\n                                                 <Paper elevation={2}>\n                                                        <Typography variant=\"h4\">{weatherData?.pressure}Pa</Typography>\n                                                        <FilterTiltShiftOutlinedIcon/>\n                                                        <Typography variant=\"body1\">Pressure</Typography>\n                                                 </Paper>\n                                          </Grid>\n                                          <Grid item xs={12} lg={6} className={classes.dataContainer}>\n                                                 <Paper elevation={2}>\n                                                        <Typography variant=\"h4\">{weatherData?.wind}m/s</Typography>\n                                                        <HdrWeakOutlinedIcon/>\n                                                        <Typography variant=\"body1\">Wind speed</Typography>\n                                                 </Paper>\n                                          </Grid>\n                                   </Grid>\n                            )\n                     }\n              </Grid>\n       );\n}\n\nexport default React.memo(Weather);","import { configureStore } from '@reduxjs/toolkit'\nimport weatherReducer from './Weather/WeatherSlice';\n\nexport const store = configureStore({\n  reducer: {\n    weather:weatherReducer\n  },\n})\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch","import React from 'react';\nimport Home from './Pages/Home/Home';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './Theme/Theme';\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom';\nimport Header from './Components/Header/Header';\nimport About from './Pages/about/About';\nimport Contact from './Pages/Contact/Contact';\nimport Weather from './Pages/Weather/Weather';\nimport { Provider } from 'react-redux';\nimport {store} from './Redux/Store';\n\nconst Jweather:React.FC = ()=>{\n       return (\n              <>\n              <Provider store={store}>\n                     <ThemeProvider theme={theme}>\n                            <Router>\n                                   <Header/>\n                                   <Switch>\n                                          <Route exact path=\"/home\">\n                                                 <Home/>\n                                          </Route>\n                                          <Route exact path=\"/\">\n                                                 <Home/>\n                                          </Route>\n                                          <Route exact path=\"/about\">\n                                                 <About/>\n                                          </Route>\n                                          <Route exact path=\"/contact\">\n                                                 <Contact/>\n                                          </Route>\n                                          <Route exact path=\"/weather\">\n                                                 <Weather/>\n                                          </Route>\n                                   </Switch>\n                            </Router>\n                     </ThemeProvider>\n              </Provider>\n              </>\n       );\n}\n\nexport default Jweather;","import React from 'react';\nimport Jweather from './Jweather';\nfunction App() {\n  return (\n    <Jweather/>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}